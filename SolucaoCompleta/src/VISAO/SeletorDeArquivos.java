/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VISAO;

import CONTROLE.BACKEND.RodarRestauracao;
import CONTROLE.UTIL.Arquivo;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author mgarcia
 */
public class SeletorDeArquivos extends javax.swing.JDialog {
    private boolean candidatostxtvalido = false;
    private boolean concursostxtvalido = false;
    private String[] arquivos;

    /**
     * Creates new form NewJDialog
     */
    public SeletorDeArquivos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        candidatoTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        concursoTF = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SELETOR DE ARQUIVOS");

        candidatoTF.setEditable(false);

        jButton1.setText("Buscar Arquivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Caminho para o arquivo \"concursos.txt\"");

        jButton4.setText("Buscar Arquivo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        concursoTF.setEditable(false);

        jButton5.setText("OK");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("SELECIONE ONDE ESTÃO OS ARQUIVOS DE DADOS \"candidatos.txt\" e \"concursos.txt\"");

        jLabel1.setText("Caminho para o arquivo \"candidatos.txt\"");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(candidatoTF)
                    .addComponent(concursoTF)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jButton1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(candidatoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(concursoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //selecionar o arquivo candidatos.txt
        JFileChooser seletor = new JFileChooser();
        seletor.setFileSelectionMode(JFileChooser.FILES_ONLY);
        seletor.showOpenDialog(candidatoTF);
        File candidatotxt = seletor.getSelectedFile();
        String Path = candidatotxt.getPath();
        if (Path.substring((Path.length() - 14), Path.length()).equals("candidatos.txt")) {
            if (Arquivo.AreYouHere(Path)) {
                candidatoTF.setText(Path);
                candidatostxtvalido = true;
            } else {
                JOptionPane.showMessageDialog(null, "Erro. Parece que o arquivo"
                    + "não existe ou não é acessivel");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Arquivo Recusado!\n"
                + "O arquivo deve se chamar 'candidatos.txt'");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //selecionar o arquivo concursos.txt
        JFileChooser seletor = new JFileChooser();
        seletor.setFileSelectionMode(JFileChooser.FILES_ONLY);
        seletor.showOpenDialog(concursoTF);
        File concursotxt = seletor.getSelectedFile();
        String Path = concursotxt.getPath();
        if (Path.substring((Path.length() - 13), Path.length()).equals("concursos.txt")) {
            if (Arquivo.AreYouHere(Path)) {
                concursoTF.setText(Path);
                concursostxtvalido = true;
            } else {
                JOptionPane.showMessageDialog(null, "Erro. Parece que o arquivo"
                    + "não existe ou não é acessivel");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Arquivo Recusado!\n"
                + "O arquivo deve se chamar 'concursos.txt'");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (!candidatostxtvalido && !concursostxtvalido) {
            JOptionPane.showMessageDialog(null,
                "Selecione os arquivos antes de continuar");
        } else if (!candidatostxtvalido && concursostxtvalido) {
            JOptionPane.showMessageDialog(null,
                "Selecione o caminho para o arquivo candidatos.txt");
        } else if (candidatostxtvalido && !concursostxtvalido) {
            JOptionPane.showMessageDialog(null,
                "Selecione o caminho para o arquivo concursos.txt");
        } else if (candidatostxtvalido && concursostxtvalido) {
            JOptionPane.showMessageDialog(null,
                "Arquivos apontados com êxito");
            arquivos = new String[2];
            arquivos[0] = candidatoTF.getText();
            arquivos[1] = concursoTF.getText();
            try {
                //instancio o RodarRestauração dentro de uma Thread para não
                //travar a janela do seletor de arquivos ao clicar em OK
                Thread t1 = new Thread(new Runnable() {
                    @Override
                    public synchronized void run() {
                        try {
                            new RodarRestauracao(arquivos);
                        } catch (Exception ex) {
                            Logger.getLogger(SeletorDeArquivos.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });
                
                //esta thread mostra a tela de espera enquanto a primeira nao termina
                Thread t2 = new Thread (new Runnable() {
                   @Override
                   public void run () {
                       try {
                           EsperaSQL e = new EsperaSQL();
                           e.setVisible(true);
                           t1.join();
                           e.dispose();      
                       } catch (InterruptedException ex) {
                           Logger.getLogger(SeletorDeArquivos.class.getName()).log(Level.SEVERE, null, ex);
                       }
                       
                   }
                });
                t1.start();
                t2.start();
                
                dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro ao invocar"
                    + " a restauração dos arquivos no banco\n" + ex);
                Logger.getLogger(SeletorDeArquivos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeletorDeArquivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeletorDeArquivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeletorDeArquivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeletorDeArquivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SeletorDeArquivos dialog = new SeletorDeArquivos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField candidatoTF;
    private javax.swing.JTextField concursoTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
