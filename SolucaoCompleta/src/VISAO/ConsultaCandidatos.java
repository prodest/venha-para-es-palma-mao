/*
 * Copyright (C) 2018 mgarcia
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package VISAO;


import CONTROLE.CONSULTAS.Candidatos;
import CONTROLE.DAO.ConcursoPublicoDAO;
import CONTROLE.UTIL.Data;
import ENTIDADES.Candidato;
import ENTIDADES.ConcursoPublico;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author mgarcia
 */
public class ConsultaCandidatos extends javax.swing.JFrame {

    ArrayList<Candidato> lista;
    ConcursoPublico concurso;

    /**
     * Creates new form ConsultaConcursos
     */
    public ConsultaCandidatos(String codconcurso) {

        /*
            *
            *   A janela trabalhará com uma Lista de Candidatos recuperados do banco
            *   através da query resolvida do problema 2, e um Concurso, que será
            *   recuperado do banco pelo Codigo fornecido pelo operador ao clicar no
            *   botão do problema 2. os dados deste Concurso serão apresentados na
            *   tela abaixo da tabela de dados de Candidatos recuperados para nos
            *   certificarmos que a busca foi feita para o Concurso correto.
            *
         */
        try {
            lista = Candidatos.Problema2(codconcurso);
            ConcursoPublicoDAO condao = new ConcursoPublicoDAO();
            concurso = condao.getByCodigoConcurso(codconcurso);
            if (null == concurso) {
                JOptionPane.showMessageDialog(null, "O Código informado não existe");
                dispose();
            }
        } catch (Exception ex) {
            Logger.getLogger(ConsultaCandidatos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao buscar dados" + ex);
            dispose();
        }

        initComponents();

        ResultLabel.setText(lista.size() + " resultados encontrados");
        GregorianCalendar today = new GregorianCalendar();
        datalabel.setText("Data da pesquisa: " + Data.getDataHoraBR());
        ConcTXT.setText(concurso.getOrgao() + " " + concurso.getEdital());
    }

    // este método retorna uma matriz de objetos que alimenta a tabela
    // exibida pelo swing na tela do usuario.
    public Object[][] getArray() {
        int length = lista.size();
        Object[][] matrix = new String[length][3];

        for (int i = 0; i < length; i++) {
            Candidato c = lista.get(i);
            for (int y = 0; y < 3; y++) {
                switch (y) {
                    case 0:
                        matrix[i][y] = lista.get(i).getNome();
                        break;
                    case 1:
                        matrix[i][y] = Data.getDataAsStringBR(lista.get(i).getDataNasc());
                        break;
                    case 2:
                        matrix[i][y] = lista.get(i).getCPF();
                        break;
                }
            }

        }
        return matrix;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ConcTXT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ResultLabel = new javax.swing.JLabel();
        datalabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CONSULTA CANDIDATOS");
        setAlwaysOnTop(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            getArray(),
            new String [] {
                "Nome", "Nascimento", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(128);
        }

        ConcTXT.setEditable(false);
        ConcTXT.setText("teste");

        jLabel1.setText("Concurso analisado:");

        ResultLabel.setText("resultados encontrados");

        datalabel.setText("Pesquisa feita em xx/xx/xxxx as 00:00:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                    .addComponent(ConcTXT)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ResultLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(datalabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ResultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConcTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datalabel)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JOptionPane.showMessageDialog(null, "O código não foi informado!");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ConcTXT;
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JLabel datalabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
